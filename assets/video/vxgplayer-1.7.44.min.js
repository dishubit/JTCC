window.vxgplayer = function (e) {
    if (window.vxgplayer.version = "1.7.44", window.vxgplayer.players = window.vxgplayer.players || {}, !document.getElementById(e)) return console.error(" Player with " + e + " did not found"), void 0;
    if (window.vxgplayer.browserSupportsPluginPnacl = function () {
            return void 0 !== navigator.mimeTypes["application/x-pnacl"] && void 0 !== navigator.mimeTypes["application/vxg_media_player"]
        }, !window.vxgplayer.players[e]) {
        if ("undefined" == typeof chrome) {
            console.log("Available in Chrome");
            var l = document.getElementById(e),
                o = 640,
                t = 480;
            o = parseInt(l.width, 10) || o, t = parseInt(l.height, 10) || t, l.style.width = o + "px", l.style.height = t + "px";
            var a = '<div class="vxgplayer-unsupport">	<div class="vxgplayer-unsupport-content"> Available in <a href="https://www.google.com/chrome/" target="_blank">Chrome</a>	</div></div>';
            return l.innerHTML = a, void 0
        }
        if (!vxgplayer.browserSupportsPluginPnacl()) {
            console.log("Not installed vxg_media_player");
            var l = document.getElementById(e),
                o = 640,
                t = 480;
            o = parseInt(l.width, 10) || o, t = parseInt(l.height, 10) || t, l.style.width = o + "px", l.style.height = t + "px";
            var a = '<div class="vxgplayer-unsupport">	<div class="vxgplayer-unsupport-content">	<a href="http://rtpstream.com/player_start/">Click here for install plugin</a>	<br/><br/> or visit in webstore <a href="https://chrome.google.com/webstore/detail/vxg-media-player/hncknjnnbahamgpjoafdebabmoamcnni" target="_blank">VXG Media Player</a>	</div></div>';
            return l.innerHTML = a, void 0
        }
        window.location.href = "http://rtpstream.com/player_start/", window.vxgplayer.players[e] = new function (e) {
            function l() {
                n.module.debug && console.log("moduleDidLoad: ", arguments), n.module.command("startwebsclient", "8778")
            }

            function o() {
                n.module.debug && console.log("playerDidLoad: ", arguments), n.onReadyStateCallback && n.onReadyStateCallback(), n.src(u)
            }

            function t(l) {
                n.module.debug && console.log("Player " + e + ": " + l.data), 0 == l.data.indexOf("VERSION_APP") ? (n.module.versionapp = l.data.split(" ")[1], n.module.debug && console.log("=VERSION_APP " + n.module.versionapp), o()) : "MEDIA_ERR_URL" == l.data ? (n.showerror("Problem with URL"), n.module.lastErrorCode = 0) : "MEDIA_ERR_NETWORK" == l.data ? (n.showerror("Problem with network"), n.module.lastErrorCode = 1) : "MEDIA_ERR_SOURCE" == l.data ? (n.showerror("Problem with source"), n.module.lastErrorCode = 2) : "MEDIA_ERR_CARRIER" == l.data ? (n.showerror("Problem with carrier"), n.module.lastErrorCode = 3) : "MEDIA_ERR_AUDIO" == l.data ? (n.showerror("Problem with audio"), n.module.lastErrorCode = 4) : "MEDIA_ERR_VIDEO" == l.data ? (n.showerror("Problem with video"), n.module.lastErrorCode = 5) : "MEDIA_ERR_AUTHENTICATION" == l.data ? (n.showerror("Problem with authentification"), n.module.lastErrorCode = 6) : "MEDIA_ERR_BANDWIDTH" == l.data ? (n.stop(), n.module.lastErrorCode = 7, n.module.handlerBandwidthError && n.module.handlerBandwidthError(n)) : "MEDIA_ERR_EOF" == l.data ? (n.showerror("End of File"), n.module.lastErrorCode = 8) : "PLAYER_CONNECTING" == l.data ? (n.module.vxgReadyState = 1, f.style.display = "inline-block", n.onStateChangeCallback && n.onStateChangeCallback(n.module.vxgReadyState)) : "PLAYER_PLAYING" == l.data ? (n.module.vxgReadyState = 2, p.style.display = "none", y.style.display = "inline-block", n.hideerror(), f.style.display = "none", n.onStateChangeCallback && n.onStateChangeCallback(n.module.vxgReadyState)) : "PLAYER_STOPPING" == l.data ? (n.module.vxgReadyState = 3, p.style.display = "none", y.style.display = "none") : "PLAYER_STOPPED" == l.data && (n.module.vxgReadyState = 0, p.style.display = "inline-block", y.style.display = "none", n.onStateChangeCallback && n.onStateChangeCallback(n.module.vxgReadyState))
            }

            function a() {
                f.style.display = "none", E.style.display = "block", console.error("ERROR"), n.showerror("Unknown error")
            }

            function r() {
                f.style.display = "none", E.style.display = "block", n.showerror("Crashed")
            }
            var n = this;
            n.id = e, n.player = document.getElementById(e);
            var d = "media_player.nmf",
                s = "pnacl/Release/media_player.nmf",
                u = "";
            n.playerWidth = 640, n.playerHeight = 480, d = n.player.getAttribute("nmf-path") || d, s = n.player.getAttribute("nmf-src") || s, u = n.player.getAttribute("url"), n.playerWidth = parseInt(n.player.getAttribute("width"), 10) || n.playerWidth, n.playerHeight = parseInt(n.player.getAttribute("height"), 10) || n.playerHeight, n.player.style.width = n.playerWidth + "px", n.player.style.height = n.playerHeight + "px";
            var i = n.player.hasAttribute("autostart") ? "1" : "0",
                m = '<div class="vxgplayer-loader" style="display: inline-block"></div><div class="vxgplayer-error" style="display: none">	<div class="vxgplayer-error-text" style="display: none"></div></div><div class="vxgplayer-controls">	<div class="vxgplayer-volume-mute"></div>	<div class="vxgplayer-volume-down"></div>	<div class="vxgplayer-volume-progress vol7"></div>	<div class="vxgplayer-volume-up"></div>	<div class="vxgplayer-play"></div>	<div class="vxgplayer-stop" style="display: none"></div>	<div class="vxgplayer-fullscreen"></div></div><embed class="vxgplayer-module" autostart_parameter="' + i + '" name="nacl_module" id="' + e + '_nacl_module" path="' + d + '" src="' + s + '" url="' + u + '" type="application/x-pnacl">';
            n.player.innerHTML = m;
            var c = n.player.getElementsByClassName("vxgplayer-controls")[0],
                p = n.player.getElementsByClassName("vxgplayer-play")[0],
                y = n.player.getElementsByClassName("vxgplayer-stop")[0],
                v = n.player.getElementsByClassName("vxgplayer-volume-mute")[0],
                g = n.player.getElementsByClassName("vxgplayer-volume-down")[0],
                h = n.player.getElementsByClassName("vxgplayer-volume-progress")[0],
                b = n.player.getElementsByClassName("vxgplayer-volume-up")[0],
                w = n.player.getElementsByClassName("vxgplayer-fullscreen")[0],
                f = n.player.getElementsByClassName("vxgplayer-loader")[0],
                E = n.player.getElementsByClassName("vxgplayer-error")[0],
                x = n.player.getElementsByClassName("vxgplayer-error-text")[0];
            document.getElementById(e + "_btnstart"), n.module = document.getElementById(e + "_nacl_module"), n.module.command = function () {
                for (var e = [], l = 0; arguments.length > l; l++) e.push(arguments[l]);
                n.module.postMessage(e)
            }, n.module.versionapp = "unknown", n.module.url = u, n.module.debug = n.player.hasAttribute("debug"), n.module.autostart = n.player.hasAttribute("autostart"), n.module.is_opened = !1, n.module.latency = 1e4, n.module.controls = !0, n.module.avsync = !1, n.module.volume = .7, n.module.vxgReadyState = 0, n.module.autohide = 2e3, n.module.lastErrorCode = -1, n.module.autoreconnect = 0, n.module.debug && console.log(e + " -  init new player"), n.player.hasAttribute("controls") || (n.module.controls = !1, c.style.display = "none"), n.player.hasAttribute("useragent-prefix") && n.module.command("setuseragent", n.player.getAttribute("useragent-prefix") + " " + navigator.userAgent), n.module.command("setversion", window.vxgplayer.version), n.module.autoreconnect = 0, n.player.hasAttribute("auto-reconnect") && (n.module.autoreconnect = 1, n.module.command("setautoreconnect", "1")), n.module.avsync = n.player.hasAttribute("avsync"), n.module.aspectRatio = n.player.hasAttribute("aspect-ratio") || n.player.hasAttribute("aspect-ratio-mode") ? 1 : 0, n.player.hasAttribute("aspect-ratio-mode") && (n.module.aspectRatio = parseInt(n.player.getAttribute("aspect-ratio-mode"), 10)), n.module.aspectRatioMode = 0 != n.module.aspectRatio ? n.module.aspectRatio : 1, n.module.command("setaspectratio", "" + n.module.aspectRatio), n.module.command("setavsync", n.module.avsync ? "1" : "0"), n.player.hasAttribute("latency") && (n.module.latency = parseInt(n.player.getAttribute("latency"), 10), n.module.command("setlatency", "" + n.module.latency)), n.player.hasAttribute("volume") && (n.module.volume = parseFloat(n.player.getAttribute("volume")), n.module.volume = Math.ceil(10 * n.module.volume) / 10, n.module.command("setvolume", n.module.volume.toFixed(1))), n.module.mute = 0 == n.module.volume, n.module.mute && (g.style.display = "none", h.style.display = "none", b.style.display = "none"), n.player.hasAttribute("autohide") && (n.module.autohide = 1e3 * parseInt(n.player.getAttribute("autohide"), 10)), n.timeout = void 0, h.className = h.className.replace(/vol\d+/g, "vol" + Math.ceil(10 * n.module.volume)), n.showerror = function (e) {
                f.style.display = "none", E.style.display = "inline-block", x.style.display = "inline-block", x.innerHTML = e
            }, n.hideerror = function () {
                E.style.display = "none", x.style.display = "none"
            }, n.readyState = function () {
                return n.module.vxgReadyState
            }, n.onReadyStateChange = function (e) {
                n.onReadyStateCallback = e
            }, n.onStateChange = function (e) {
                n.onStateChangeCallback = e
            }, n.onBandwidthError = function (e) {
                n.module.handlerBandwidthError = e
            }, n.restartTimeout = function () {
                c.style.opacity = "0.7", clearTimeout(n.timeout), n.timeout = setTimeout(function () {
                    c.style.opacity = "0"
                }, n.module.autohide)
            }, n.player.addEventListener("mousemove", function () {
                n.restartTimeout()
            }, !0), n.restartTimeout(), n.module.addEventListener("load", l, !0), n.module.addEventListener("message", t, !0), n.module.addEventListener("error", a, !0), n.module.addEventListener("crash", r, !0), window.attachListeners !== void 0 && window.attachListeners(), n.error = function () {
                return n.module.lastErrorCode
            }, n.controls = function (e) {
                return void 0 == e ? n.module.controls : (1 == e ? (c.style.display = "", n.module.controls = !0) : 0 == e && (c.style.display = "none", n.module.controls = !1), void 0)
            }, n.debug = function (e) {
                return void 0 == e ? n.module.debug : (n.module.debug = e, void 0)
            }, n.play = function () {
                return n.hideerror(), 1 > n.module.url.length ? (console.log("invalid url"), void 0) : (n.module.is_opened || (n.module.is_opened = !0, n.module.command("open", n.module.url)), p.style.display = "none", f.style.display = "inline-block", n.module.command("play", "0"), n.module.command("setvolume", n.module.volume.toFixed(1)), void 0)
            }, n.stop = function () {
                n.module.command("stop", "0"), f.style.display = "none"
            }, n.pause = function () {
                n.module.command("pause", "0"), f.style.display = "none"
            }, n.autohide = function (e) {
                return e ? (n.module.autohide = 1e3 * e, void 0) : n.module.autohide / 1e3
            }, n.autoreconnect = function (e) {
                return void 0 == e ? n.module.autoreconnect : (n.module.autoreconnect = parseInt(e, 10), n.module.command("setautoreconnect", "" + n.module.autoreconnect), void 0)
            }, n.latency = function (e) {
                return e ? (n.module.latency = parseInt(e, 10), n.module.command("setlatency", "" + e), void 0) : n.module.latency
            }, n.aspectRatio = function (e) {
                return void 0 == e ? n.module.aspectRatio ? !0 : !1 : (n.module.aspectRatio = e ? n.module.aspectRatioMode : 0, n.module.command("setaspectratio", "" + n.module.aspectRatio), void 0)
            }, n.aspectRatioMode = function (e) {
                return void 0 == e ? n.module.aspectRatioMode : (n.module.aspectRatioMode = e > 0 ? e : n.module.aspectRatioMode, n.module.aspectRatio = e, n.module.command("setaspectratio", "" + n.module.aspectRatio), void 0)
            }, n.avsync = function (e) {
                return void 0 == e ? n.module.avsync : (n.module.avsync = e, n.module.command("setavsync", n.module.avsync ? "1" : "0"), void 0)
            }, n.isMute = function () {
                return n.module.mute
            }, n.isPlaying = function () {
                return 2 == n.module.vxgReadyState
            }, n.versionPLG = function () {
                return window.vxgplayer.version
            }, n.versionAPP = function () {
                return n.module.versionapp
            }, n.mute = function () {
                n.restartTimeout(), n.module.mute = !n.module.mute, n.module.mute ? (g.style.display = "none", h.style.display = "none", b.style.display = "none", h.className = h.className.replace(/vol\d+/g, "vol0")) : (g.style.display = "inline-block", h.style.display = "inline-block", b.style.display = "inline-block", h.className = h.className.replace(/vol\d+/g, "vol" + Math.floor(10 * n.module.volume))), n.module.command("setvolume", n.module.mute ? "0" : "" + n.module.volume)
            }, n.volume = function (e) {
                return void 0 == e ? n.module.volume : (e = e > 1 ? 1 : e, e = 0 > e ? 0 : e, n.module.volume = Math.ceil(10 * e) / 10, n.module.command("setvolume", n.module.volume.toFixed(1)), h.className = h.className.replace(/vol\d+/g, "vol" + Math.ceil(10 * n.module.volume)), void 0)
            }, n.volup = function () {
                n.restartTimeout(), 10 > Math.round(10 * n.module.volume) && (n.module.volume = n.module.volume + .1, n.module.command("setvolume", n.module.volume.toFixed(1)), h.className = h.className.replace(/vol\d+/g, "vol" + Math.ceil(10 * n.module.volume)))
            }, n.voldown = function () {
                n.restartTimeout(), Math.round(10 * n.module.volume) > 0 && (n.module.volume = n.module.volume - .1, n.module.command("setvolume", n.module.volume.toFixed(1)), h.className = h.className.replace(/vol\d+/g, "vol" + Math.floor(10 * n.module.volume)))
            }, n.size = function (e, l) {
                if (!e || !l) return {
                    width: n.playerWidth,
                    height: n.playerHeight
                };
                if (Number.isInteger(e) && Number.isInteger(l)) {
                    var o = parseInt(e, 10),
                        t = parseInt(l, 10);
                    n.playerWidth = n.playerWidth != o ? o : n.playerWidth, n.playerHeight = n.playerHeight != t ? t : n.playerHeight, n.player.style.width = e + "px", n.player.style.height = l + "px"
                } else n.player.style.width = e, n.player.style.height = l
            }, n.changedFullscreen = function () {
                console.log("changedFullscreen"), document.webkitIsFullScreen ? (n.size("100%", "100%"), console.log("changedFullscreen -> fullscreen")) : (n.size(n.playerWidth + "px", n.playerHeight + "px"), console.log("changedFullscreen -> NOT fullscreen"))
            }, document.addEventListener && (document.addEventListener("webkitfullscreenchange", n.changedFullscreen, !1), document.addEventListener("mozfullscreenchange", n.changedFullscreen, !1), document.addEventListener("fullscreenchange", n.changedFullscreen, !1), document.addEventListener("MSFullscreenChange", n.changedFullscreen, !1)), n.fullscreen = function () {
                console.log("fullscreen: clicked"), 1 == document.webkitIsFullScreen ? document.webkitCancelFullScreen() : n.player.requestFullscreen ? n.player.requestFullscreen() : n.player.webkitRequestFullscreen ? n.player.webkitRequestFullscreen() : n.player.mozRequestFullscreen && n.player.mozRequestFullScreen()
            }, n.src = function (e) {
                return void 0 == e ? n.module.url : (n.module.url = e, console.log("src=" + n.module.url + " autostart=" + n.module.autostart + " is_opened=" + n.module.is_opened), n.module.url.length > 0 && n.module.autostart ? (n.module.is_opened = !0, n.module.command("open", e)) : (n.module.is_opened = !1, n.stop()), void 0)
            }, n.dispose = function () {
                n.player.innerHTML = "", delete window.vxgplayer.players[n.id]
            }, p.onclick = n.play, y.onclick = n.stop, w.onclick = n.fullscreen, v.onclick = n.mute, g.onclick = n.voldown, b.onclick = n.volup
        }(e)
    }
    return window.vxgplayer.players[e]
}, document.addEventListener("DOMContentLoaded", function () {
    for (var e = document.getElementsByClassName("vxgplayer"), l = 0; e.length > l; l++) e[l].id ? vxgplayer(e[l].id) : console.error("Player has not id", e[l])
});